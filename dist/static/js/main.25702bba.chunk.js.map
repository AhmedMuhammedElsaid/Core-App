{"version":3,"sources":["componenets/layout/SignedInLinks.js","store/actions/authAction.js","componenets/layout/SignedOutLinks.js","componenets/layout/Navbar.js","componenets/dashboard/Notifications.js","componenets/projects/ProjectSummary.js","componenets/projects/ProjectList.js","componenets/dashboard/Dashboard.js","componenets/projects/ProjectDetails.js","componenets/auth/SignIn.js","componenets/auth/SignUp.js","componenets/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","notification","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleSubmit","e","preventDefault","signIn","handleChange","setState","target","value","authError","onSubmit","htmlFor","name","onChange","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.25702bba.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink} from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport {signOut} from '../../store/actions/authAction'\r\n\r\n\r\nconst SignedInLinks=(props)=>{\r\n    return(\r\n    <ul className=\"right\">\r\n    <li><NavLink to='/create'>New Project</NavLink> </li>\r\n    <li><a onClick={props.signOut}>Log Out</a> </li>\r\n    <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink> </li>\r\n    </ul>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\nreturn{\r\n    signOut:()=> dispatch(signOut())\r\n}\r\n}\r\nexport default connect(null,mapDispatchToProps) (SignedInLinks)\r\n\r\n","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n\r\n        ).then(res => {\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESSFULLY' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err })\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks =()=>{\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup' > Signup</NavLink> </li>\r\n            <li> <NavLink to='/signin' >Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\nexport default SignedOutLinks","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar=(props)=>{\r\n    const {profile,auth} = props;\r\n    console.log(profile);\r\n    const links=auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks/>;\r\n    return(\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n            <Link to='/' className=\"brand-logo\">Mario Plan</Link>\r\n            {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nconst mapStateToProps = (state)=> {\r\n    console.log(state);\r\n    return{\r\n    auth:state.firebase.auth,\r\n    profile:state.firebase.profile\r\n    }\r\n}\r\nexport default connect(mapStateToProps) (Navbar)","import React from 'react'\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const {notifications}=props;\r\n    console.log(notifications);\r\n    \r\n    return(\r\n        <div className=\"section\">\r\n        <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n            <span className=\"card-title\">Notifications</span>\r\n            <ul className=\"notifications\">\r\n            { notifications && notifications.map(item=>{\r\n                return(\r\n                    <li key={item.id}> \r\n                     <span className=\"pink-text\"> {item.user} </span>   \r\n                     <span> {item.content} </span>\r\n                     <div className=\"grey-text note-date\">\r\n                         {moment((item.time.toDate())).fromNow()}\r\n                     </div>\r\n                    </li>\r\n                )\r\n            })}\r\n            </ul>\r\n        </div>\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary =({project})=>{\r\n    return(\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content gray-text\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\nconst ProjectList = ({ projects }) => {\r\n    // console.log(projects);\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            }\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectList","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const {auth,projects,notifications}=this.props;\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n  return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList  projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state);\r\n    return{\r\n        projects:state.firestore.ordered.projects,\r\n        auth:state.firebase.auth,\r\n        notifications:state.firestore.ordered.notification\r\n    }\r\n\r\n}\r\nexport default  compose ( \r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection :'projects',orderBy:['createdAt','desc'] },\r\n        {collection: 'notification',limit:3,orderBy:['time','desc']}\r\n    ])\r\n    )(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment'\r\n\r\n\r\nconst ProjectDetails = (props) => {\r\n    // console.log(props);\r\n    // const id = props.match.params.id;\r\n    // console.log(project);\r\n    const {project , auth}=props;\r\n    // console.log(project);\r\n    \r\n    if(!auth.uid) return <Redirect to='/signin'/>\r\n    if (project){\r\n        return(\r\n            <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\"> {project.title}</span>\r\n                <p>{project.content}</p>\r\n                </div>\r\n                <div className=\"card-action gret lighten-4 grey-text\">\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    } else {return (\r\n        <div className=\"container center\">Loading...</div>\r\n    )}\r\n}\r\nconst mapStateToProps = (state,ownProps) => {\r\n    // console.log(state);\r\n    \r\nconst id =ownProps.match.params.id;\r\nconst projects=state.firestore.data.projects;\r\nconst project=projects ? projects[id] : null\r\n// console.log(projects);\r\n\r\nreturn{\r\nproject:project,\r\nauth:state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),  \r\n    firestoreConnect([\r\n        {collection: 'projects'}\r\n    ])\r\n) (ProjectDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authAction'\r\nimport { Redirect } from 'react-router-dom';\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // console.log(this.state);\r\n        this.props.signIn(this.state);\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value })\r\n    }\r\n    render() {\r\n        const { authError,auth } = this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white \" onSubmit={this.handleSubmit}>\r\n                    <h1 className=\"grey-text text-darken-3\">Sign In</h1>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\"\r\n                            name=\"email\" id=\"email\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\" id=\"password\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">\r\n                            Login\r\n            </button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state);\r\n\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        signIn: (credentials) => dispatch(signIn(credentials))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {signUp} from '../../store/actions/authAction'\r\n\r\nclass SignUp extends Component {\r\n\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n//Set the input from the user to out State\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n//Set the New user info into our Redux store \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const { auth,authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h1 className=\"grey-text text-darken-4\">Sign Up</h1>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"firstName\" id=\"firstName\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"lastName\" id=\"lastName\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            name=\"email\" id=\"email\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\" id=\"password\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink z-depth-0 lighten-1 \">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n//getting state from Redux store to the componenet \r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError:state.auth.authError\r\n    }\r\n}\r\n//Dispatch the action of signUp a new user\r\nconst mapDispatchToProps=(dispatch) =>{\r\n    return{\r\n        signUp:(newUser)=> dispatch (signUp(newUser))\r\n    }\r\n}\r\n//connect our component to our store  \r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\r\nimport {createProject} from '../../store/actions/projectActions'\r\nimport {connect} from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport class CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        // console.log(this.props);\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n        \r\n    }\r\n    render() {\r\n        const {auth} =this.props;\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h1 className=\" grey-text text-darken-2\">Create Project</h1>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Project Title</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"title\" id=\"title\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea className=\"materialize-textarea\"\r\n                            id=\"content\" name=\"content\"\r\n                            onChange={this.handleChange}\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink text-lighten-1\" > Create Project</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps= (state) => {\r\n    return{\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps= (dispatch) => {\r\n    return {\r\n        createProject:(project)=>dispatch(createProject(project))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, {getFirestore}) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\r\n    }).catch(err => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\r\n    });\r\n  }\r\n};","import React, { Component } from 'react'\r\nimport {BrowserRouter, Switch ,Route} from 'react-router-dom'\r\nimport Navbar from './componenets/layout/Navbar'\r\nimport Dashboard from './componenets/dashboard/Dashboard'\r\nimport ProjectDetails from './componenets/projects/ProjectDetails'\r\nimport SignIn from './componenets/auth/SignIn'\r\nimport SignUp from './componenets/auth/SignUp'\r\nimport CreateProject from './componenets/projects/CreateProject'\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n            <div className=\"App\">\r\n               <Navbar/>\r\n               <Switch>\r\n                   <Route exact path=\"/\" component={Dashboard}/>\r\n                   <Route path=\"/project/:id\" component={ProjectDetails}/>\r\n                   <Route path=\"/signin\" component={SignIn}/>\r\n                   <Route path=\"/signup\" component={SignUp}/>\r\n                   <Route path=\"/create\" component={CreateProject}/>\r\n               </Switch>\r\n            </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState={\r\n    authError:null\r\n};\r\n\r\nconst authReducer= ( state=initState,action) => {\r\nswitch(action.type){\r\n    case 'LOGIN_ERROR':\r\n        console.log('Login Failed');\r\n        return {\r\n            ...state,\r\n            authError:'Login Failed'\r\n        }\r\n    case 'LOGIN_SUCCESS':\r\n        console.log('Login Success');\r\n        return {\r\n            ...state,\r\n            authError:null\r\n        }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('Logged out Successfully');\r\n            return state;\r\n            case 'SIGNUP_SUCCESSFULLY':\r\n                console.log('SIGNUP_SUCCESSFULLY')\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n            case 'SIGNUP_ERROR' :\r\n                console.log('SIGNUP_ERROR');\r\n                return{\r\n                    ...state,\r\n                    authError:action.err.message\r\n                }\r\n        default :\r\n    return state\r\n        }\r\n    }\r\n\r\nexport default authReducer","const initState ={\r\n    projects:[\r\n        {id:'1' , title:'help me to find the eggs',content:'bla bla bla '},\r\n        {id:'2' , title:'Leave me',content:'bla bdasdasla bla '},\r\n        {id:'3' , title:'help me to find the beach please dude',content:'blaasdas bla bla '},\r\n    ]\r\n}\r\n\r\nconst projectReducer= ( state=initState , action ) => {\r\n    switch (action.type){\r\n    case 'CREATE_PROJECT':\r\n        console.log('create Project',action.project);\r\n        return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n    console.log('create project error',action.err);\r\nreturn state \r\ndefault:\r\n    return state\r\n    }\r\n}\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport {combineReducers} from 'redux'\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer=combineReducers({\r\n    auth:authReducer,\r\n    project:projectReducer,\r\n    firestore:firestoreReducer,\r\n    firebase:firebaseReducer\r\n});\r\n\r\nexport default rootReducer\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n  \r\n\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyDMup6LzNMHUA5Rr4_XLywOGVvDBP9DGak\",\r\n    authDomain: \"react-redux-app-dc1a7.firebaseapp.com\",\r\n    databaseURL: \"https://react-redux-app-dc1a7.firebaseio.com\",\r\n    projectId: \"react-redux-app-dc1a7\",\r\n    storageBucket: \"react-redux-app-dc1a7.appspot.com\",\r\n    messagingSenderId: \"223905401800\",\r\n    appId: \"1:223905401800:web:d5689421eca1501819cefd\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({ timestampsInSnapshots: true });\r\n  \r\n  export default firebase\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport thunk from 'redux-thunk'\n// import {reduxFirestore,getFirestore} from 'redux-firestore'\n// import {reactReduxFirebase, getFirebase} from 'react-redux-firebase'\n// import fbConfig from './config/fbConfig'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reactReduxFirebase(fbConfig,{useFirestoreForProfile: true , userProfile:'users' , attachAuthIsReady: true }), // redux binding for firebase\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\n\n// const store=createStore(rootReducer,\n//     compose(\n//         applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})) ,\n//         reduxFirestore(fbConfig),\n//         reactReduxFirebase(fbConfig)\n//     )\n//      );\nstore.firebaseAuthIsReady.then(() => {\n\n  ReactDOM.render(<Provider store={store}>\n    <App />\n  </Provider>\n    , document.getElementById('root'));\n\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}